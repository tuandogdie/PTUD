<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAA/9JREFUaEPtmk1r1UAUhuVSuhBxIa67KFKKFClFinQh3LuS4sIf4Mql+E+kFHFd
        xIX4E8RVrriQItKFC5FSXFxKFyIixc2EUp8zmUwm9+ZjJk1SvwZezptk5uQ9c06mk5teqGqjcTwYRmp5
        GMU72M8cH8GPxPryhtgHO6MoXh6iwcgJbzhZRfgbHJ1iTzlOEMIZ2xSIfzsaqzUjJ6wx8CIOHiMitqL6
        RsS9o3hLtBhZ/m04VouUAjMw65hrQfyMEA2LRpZ/I+olMvB+ypmkFat+wg/BhNKacG5SxetAv0MgPpP7
        SAllXDQsGVn+rSwAzn/A3sOuYdfIkrZlnECsLeNiAT5j8c3z5tyvaQA4zgXglMSG6dJ6w/e6vocbQKKh
        QQaieMkMnqpnddV0ab3h/3J2Hws0qLNnwMEV06X1hu9L+h7uctw0AxUl1EMAVrygWQAVJdRhACoJIA80
        /IslJIOIvCCALjNQUEJ6GW2QARmEg/4zMLufahpA9gzk0UMGXPhmQA+O4mtgGc4WWt1h4MecM42+S0hr
        QIvRNUYjfy/MED1oAG7S8QmrzS58z+ATyPYnGfouITQo0bLHpIou0fgUrBPoQAZdB+848Nw291xCxUCr
        ekdAKzLomXuRFGm451xwrbutRGS2EvlVqIo/lwD2s7Q56SuF6mwzRwlTFjMlVM4jtS8ByDtodrEGpO01
        dpUZaP6uOtXwN8DfDbbRr9x71QEtRwxWuQDqSihohuxxN5yAJQAyYG84deNCKOeFw4OHBhzGTQDphT8M
        poQkA8UdShE6Y93BKSELXVuZgPS85WZwCLe2Xd4wAzgJ4sD13y7/X0J+3Np2+V9fQidAdn93ETQPNuCR
        viYzkfbz4d2hooTG8TfwANgtA3ydtCWDTV8vbm27vKaE1AFbittGu26cl3cHZ9uNw1oOXP/t8soS+gEe
        cW3eET/S12Qm0n4+vDtUlpBAXuceglvgPti1wZq+XtzadrnfKhTF37HyyecrpcGDjRN73YcD13+73COA
        IshMhPDuUFFCqYD0vOVmcAi3tl3uVUIEc8JqdMzr3jHHfeMkp22WVwYgy+VLri3oNfQcGs/SAjP9wmgp
        0lheQsz4IQ42ja9za+iTH9gmepKDSiiSAOLfIYBNIFoS4VaftjXPQPKRe5OMmA9y5iOe8zGvYy7ik/1X
        McpLSHPpFPHwRqRQPomKTXl6XMuTT67J2EAuD7LRlCDP6acDONAnZqMrgQnMmwPXf7v8i/yct8UyKVvn
        7GId0uz48i7A8o7dJgNqBSK1zprLTYlsqoSmeOoggFvbDqd05O+D/COI/nF3DkgQW3SQLXT6Ly8a7rFw
        qTvNsT7ctS3xA7AN0BzP/QJmUQX+vqnh9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>